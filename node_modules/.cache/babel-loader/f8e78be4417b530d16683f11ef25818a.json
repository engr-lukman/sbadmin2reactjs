{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/Lukman/sbadmin2reactjs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/Lukman/sbadmin2reactjs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/Lukman/sbadmin2reactjs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/Lukman/sbadmin2reactjs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/Lukman/sbadmin2reactjs/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/Lukman/sbadmin2reactjs/src/components/UIElements/Grid/MobileDesktop.jsx\";\nimport React, { PureComponent } from 'react';\n\nvar MobileDesktop =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(MobileDesktop, _PureComponent);\n\n  function MobileDesktop(props) {\n    var _this;\n\n    _classCallCheck(this, MobileDesktop);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MobileDesktop).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(MobileDesktop, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"panel panel-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"panel-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Example: Mobile and desktop\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Don't want your columns to simply stack in smaller devices? Use the extra small and medium device grid classes by adding\", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \".col-xs-*\"), React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \".col-md-*\"), \" to your columns. See the example below for a better idea of how it all works.\"), React.createElement(\"div\", {\n        className: \"row show-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-12 col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \".col-xs-12 .col-md-8\"), React.createElement(\"div\", {\n        className: \"col-xs-6 col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \".col-xs-6 .col-md-4\")), React.createElement(\"div\", {\n        className: \"row show-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-6 col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \".col-xs-6 .col-md-4\"), React.createElement(\"div\", {\n        className: \"col-xs-6 col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \".col-xs-6 .col-md-4\"), React.createElement(\"div\", {\n        className: \"col-xs-6 col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \".col-xs-6 .col-md-4\")), React.createElement(\"div\", {\n        className: \"row show-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \".col-xs-6\"), React.createElement(\"div\", {\n        className: \"col-xs-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \".col-xs-6\")))))));\n    }\n  }]);\n\n  return MobileDesktop;\n}(PureComponent);\n\nexport default MobileDesktop;","map":{"version":3,"sources":["/opt/lampp/htdocs/Lukman/sbadmin2reactjs/src/components/UIElements/Grid/MobileDesktop.jsx"],"names":["React","PureComponent","MobileDesktop","props","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;IAEMC,a;;;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,uFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFe;AAGlB;;;;6BACQ;AACL,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qIACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,mFAFJ,EAKI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,CALJ,EASI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,EAEI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHJ,CATJ,EAcI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CAdJ,CADJ,CADJ,CADJ,CADJ,CADJ;AA+BH;;;;EArCuBH,a;;AAwC5B,eAAeC,aAAf","sourcesContent":["import React, { PureComponent } from 'react';\n\nclass MobileDesktop extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        return ( \n            <React.Fragment>\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"panel panel-default\">\n                            <div className=\"panel-body\">\n                                <h3>Example: Mobile and desktop</h3>\n                                <p>Don't want your columns to simply stack in smaller devices? Use the extra small and medium device grid classes by adding\n                                    <code>.col-xs-*</code>\n                                    <code>.col-md-*</code> to your columns. See the example below for a better idea of how it all works.</p>\n                                <div className=\"row show-grid\">\n                                    <div className=\"col-xs-12 col-md-8\">.col-xs-12 .col-md-8</div>\n                                    <div className=\"col-xs-6 col-md-4\">.col-xs-6 .col-md-4</div>\n                                </div>\n                                <div className=\"row show-grid\">\n                                    <div className=\"col-xs-6 col-md-4\">.col-xs-6 .col-md-4</div>\n                                    <div className=\"col-xs-6 col-md-4\">.col-xs-6 .col-md-4</div>\n                                    <div className=\"col-xs-6 col-md-4\">.col-xs-6 .col-md-4</div>\n                                </div>\n                                <div className=\"row show-grid\">\n                                    <div className=\"col-xs-6\">.col-xs-6</div>\n                                    <div className=\"col-xs-6\">.col-xs-6</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {/* <!-- /.col-lg-12 --> */}\n                </div>\n                {/* <!-- /.row --> */}\n            </React.Fragment>\n         );\n    }\n}\n \nexport default MobileDesktop;"]},"metadata":{},"sourceType":"module"}