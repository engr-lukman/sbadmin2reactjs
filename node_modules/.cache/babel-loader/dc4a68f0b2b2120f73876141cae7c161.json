{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/Lukman/sbadmin2reactjs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/Lukman/sbadmin2reactjs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/Lukman/sbadmin2reactjs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/Lukman/sbadmin2reactjs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/Lukman/sbadmin2reactjs/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/Lukman/sbadmin2reactjs/src/components/Charts/FlotCharts/FlotCharts.jsx\";\n// jQuery\nimport $ from \"jquery\"; // Bootstrap Core JavaScript\n\nimport \"bootstrap/dist/js/bootstrap.js\"; // Metis Menu Plugin JavaScript\n\nimport \"my-module/metisMenu/metisMenu.js\"; // Flot Charts JavaScript\n\nimport \"my-module/flot/excanvas.js\";\nimport \"my-module/flot/jquery.flot.js\";\nimport \"my-module/flot/jquery.flot.pie.js\";\nimport \"my-module/flot/jquery.flot.resize.js\";\nimport \"my-module/flot/jquery.flot.time.js\";\nimport \"my-module/flot-tooltip/jquery.flot.tooltip.min.js\"; // Custom Theme JavaScript\n\nimport \"my-module/sb-admin-2.js\";\nimport React, { PureComponent } from 'react';\nimport LineChart from './LineChart';\nimport PieChart from './PieChart';\nimport AxesLineChart from './AxesLineChart';\nimport MovingLineChart from './MovingLineChart';\nimport BarChart from './BarChart';\nimport Documentation from './Documentation';\n\nvar FlotCharts =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(FlotCharts, _PureComponent);\n\n  function FlotCharts(props) {\n    var _this;\n\n    _classCallCheck(this, FlotCharts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FlotCharts).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(FlotCharts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.title = \"Flot Charts\";\n      document.getElementById(\"pageTitle\").innerHTML = \"Flot Charts\"; //Flot Moving Line Chart\n\n      $(function () {\n        var container = $(\"#flot-line-chart-moving\"); // Determine how many data points to keep based on the placeholder's initial size;\n        // this gives us a nice high-res plot while avoiding more than one point per pixel.\n\n        var maximum = container.outerWidth() / 2 || 300; //\n\n        var data = [];\n\n        function getRandomData() {\n          if (data.length) {\n            data = data.slice(1);\n          }\n\n          while (data.length < maximum) {\n            var previous = data.length ? data[data.length - 1] : 50;\n            var y = previous + Math.random() * 10 - 5;\n            data.push(y < 0 ? 0 : y > 100 ? 100 : y);\n          } // zip the generated y values with the x values\n\n\n          var res = [];\n\n          for (var i = 0; i < data.length; ++i) {\n            res.push([i, data[i]]);\n          }\n\n          return res;\n        } //\n\n\n        var series = [{\n          data: getRandomData(),\n          lines: {\n            fill: true\n          }\n        }]; //\n\n        var plot = $.plot(container, series, {\n          grid: {\n            borderWidth: 1,\n            minBorderMargin: 20,\n            labelMargin: 10,\n            backgroundColor: {\n              colors: [\"#fff\", \"#e4f4f4\"]\n            },\n            margin: {\n              top: 8,\n              bottom: 20,\n              left: 20\n            },\n            markings: function markings(axes) {\n              var markings = [];\n              var xaxis = axes.xaxis;\n\n              for (var x = Math.floor(xaxis.min); x < xaxis.max; x += xaxis.tickSize * 2) {\n                markings.push({\n                  xaxis: {\n                    from: x,\n                    to: x + xaxis.tickSize\n                  },\n                  color: \"rgba(232, 232, 255, 0.2)\"\n                });\n              }\n\n              return markings;\n            }\n          },\n          xaxis: {\n            tickFormatter: function tickFormatter() {\n              return \"\";\n            }\n          },\n          yaxis: {\n            min: 0,\n            max: 110\n          },\n          legend: {\n            show: true\n          }\n        }); // Update the random dataset at 25FPS for a smoothly-animating chart\n\n        setInterval(function updateRandom() {\n          series[0].data = getRandomData();\n          plot.setData(series);\n          plot.draw();\n        }, 40);\n      }); //Flot Bar Chart\n\n      $(function () {\n        var barOptions = {\n          series: {\n            bars: {\n              show: true,\n              barWidth: 43200000\n            }\n          },\n          xaxis: {\n            mode: \"time\",\n            timeformat: \"%m/%d\",\n            minTickSize: [1, \"day\"]\n          },\n          grid: {\n            hoverable: true\n          },\n          legend: {\n            show: false\n          },\n          tooltip: true,\n          tooltipOpts: {\n            content: \"x: %x, y: %y\"\n          }\n        };\n        var barData = {\n          label: \"bar\",\n          data: [[1354521600000, 1000], [1355040000000, 2000], [1355223600000, 3000], [1355306400000, 4000], [1355487300000, 5000], [1355571900000, 6000]]\n        };\n        $.plot($(\"#flot-bar-chart\"), [barData], barOptions);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(LineChart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(PieChart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(AxesLineChart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(MovingLineChart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(BarChart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(Documentation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return FlotCharts;\n}(PureComponent);\n\nexport default FlotCharts;","map":{"version":3,"sources":["/opt/lampp/htdocs/Lukman/sbadmin2reactjs/src/components/Charts/FlotCharts/FlotCharts.jsx"],"names":["$","React","PureComponent","LineChart","PieChart","AxesLineChart","MovingLineChart","BarChart","Documentation","FlotCharts","props","state","document","title","getElementById","innerHTML","container","maximum","outerWidth","data","getRandomData","length","slice","previous","y","Math","random","push","res","i","series","lines","fill","plot","grid","borderWidth","minBorderMargin","labelMargin","backgroundColor","colors","margin","top","bottom","left","markings","axes","xaxis","x","floor","min","max","tickSize","from","to","color","tickFormatter","yaxis","legend","show","setInterval","updateRandom","setData","draw","barOptions","bars","barWidth","mode","timeformat","minTickSize","hoverable","tooltip","tooltipOpts","content","barData","label"],"mappings":";;;;;;AAAA;AACA,OAAOA,CAAP,MAAc,QAAd,C,CACA;;AACA,OAAO,gCAAP,C,CACA;;AACA,OAAO,kCAAP,C,CACA;;AACA,OAAO,4BAAP;AACA,OAAO,+BAAP;AACA,OAAO,mCAAP;AACA,OAAO,sCAAP;AACA,OAAO,oCAAP;AACA,OAAO,mDAAP,C,CACA;;AACA,OAAO,yBAAP;AAEA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;IAEMC,U;;;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFe;AAGlB;;;;wCACmB;AAChBC,MAAAA,QAAQ,CAACC,KAAT,GAAiB,aAAjB;AACAD,MAAAA,QAAQ,CAACE,cAAT,CAAwB,WAAxB,EAAqCC,SAArC,GAAiD,aAAjD,CAFgB,CAGhB;;AACAf,MAAAA,CAAC,CAAC,YAAW;AAET,YAAIgB,SAAS,GAAGhB,CAAC,CAAC,yBAAD,CAAjB,CAFS,CAIT;AACA;;AAEA,YAAIiB,OAAO,GAAGD,SAAS,CAACE,UAAV,KAAyB,CAAzB,IAA8B,GAA5C,CAPS,CAST;;AAEA,YAAIC,IAAI,GAAG,EAAX;;AAEA,iBAASC,aAAT,GAAyB;AAErB,cAAID,IAAI,CAACE,MAAT,EAAiB;AACbF,YAAAA,IAAI,GAAGA,IAAI,CAACG,KAAL,CAAW,CAAX,CAAP;AACH;;AAED,iBAAOH,IAAI,CAACE,MAAL,GAAcJ,OAArB,EAA8B;AAC1B,gBAAIM,QAAQ,GAAGJ,IAAI,CAACE,MAAL,GAAcF,IAAI,CAACA,IAAI,CAACE,MAAL,GAAc,CAAf,CAAlB,GAAsC,EAArD;AACA,gBAAIG,CAAC,GAAGD,QAAQ,GAAGE,IAAI,CAACC,MAAL,KAAgB,EAA3B,GAAgC,CAAxC;AACAP,YAAAA,IAAI,CAACQ,IAAL,CAAUH,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAYA,CAAC,GAAG,GAAJ,GAAU,GAAV,GAAgBA,CAAtC;AACH,WAVoB,CAYrB;;;AAEA,cAAII,GAAG,GAAG,EAAV;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,IAAI,CAACE,MAAzB,EAAiC,EAAEQ,CAAnC,EAAsC;AAClCD,YAAAA,GAAG,CAACD,IAAJ,CAAS,CAACE,CAAD,EAAIV,IAAI,CAACU,CAAD,CAAR,CAAT;AACH;;AAED,iBAAOD,GAAP;AACH,SAjCQ,CAmCT;;;AAEA,YAAIE,MAAM,GAAG,CAAC;AACVX,UAAAA,IAAI,EAAEC,aAAa,EADT;AAEVW,UAAAA,KAAK,EAAE;AACHC,YAAAA,IAAI,EAAE;AADH;AAFG,SAAD,CAAb,CArCS,CA4CT;;AAEA,YAAIC,IAAI,GAAGjC,CAAC,CAACiC,IAAF,CAAOjB,SAAP,EAAkBc,MAAlB,EAA0B;AACjCI,UAAAA,IAAI,EAAE;AACFC,YAAAA,WAAW,EAAE,CADX;AAEFC,YAAAA,eAAe,EAAE,EAFf;AAGFC,YAAAA,WAAW,EAAE,EAHX;AAIFC,YAAAA,eAAe,EAAE;AACbC,cAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,SAAT;AADK,aAJf;AAOFC,YAAAA,MAAM,EAAE;AACJC,cAAAA,GAAG,EAAE,CADD;AAEJC,cAAAA,MAAM,EAAE,EAFJ;AAGJC,cAAAA,IAAI,EAAE;AAHF,aAPN;AAYFC,YAAAA,QAAQ,EAAE,kBAASC,IAAT,EAAe;AACrB,kBAAID,QAAQ,GAAG,EAAf;AACA,kBAAIE,KAAK,GAAGD,IAAI,CAACC,KAAjB;;AACA,mBAAK,IAAIC,CAAC,GAAGtB,IAAI,CAACuB,KAAL,CAAWF,KAAK,CAACG,GAAjB,CAAb,EAAoCF,CAAC,GAAGD,KAAK,CAACI,GAA9C,EAAmDH,CAAC,IAAID,KAAK,CAACK,QAAN,GAAiB,CAAzE,EAA4E;AACxEP,gBAAAA,QAAQ,CAACjB,IAAT,CAAc;AACVmB,kBAAAA,KAAK,EAAE;AACHM,oBAAAA,IAAI,EAAEL,CADH;AAEHM,oBAAAA,EAAE,EAAEN,CAAC,GAAGD,KAAK,CAACK;AAFX,mBADG;AAKVG,kBAAAA,KAAK,EAAE;AALG,iBAAd;AAOH;;AACD,qBAAOV,QAAP;AACH;AAzBC,WAD2B;AA4BjCE,UAAAA,KAAK,EAAE;AACHS,YAAAA,aAAa,EAAE,yBAAW;AACtB,qBAAO,EAAP;AACH;AAHE,WA5B0B;AAiCjCC,UAAAA,KAAK,EAAE;AACHP,YAAAA,GAAG,EAAE,CADF;AAEHC,YAAAA,GAAG,EAAE;AAFF,WAjC0B;AAqCjCO,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF;AArCyB,SAA1B,CAAX,CA9CS,CAwFT;;AAEAC,QAAAA,WAAW,CAAC,SAASC,YAAT,GAAwB;AAChC9B,UAAAA,MAAM,CAAC,CAAD,CAAN,CAAUX,IAAV,GAAiBC,aAAa,EAA9B;AACAa,UAAAA,IAAI,CAAC4B,OAAL,CAAa/B,MAAb;AACAG,UAAAA,IAAI,CAAC6B,IAAL;AACH,SAJU,EAIR,EAJQ,CAAX;AAMH,OAhGA,CAAD,CAJgB,CAsGhB;;AAEA9D,MAAAA,CAAC,CAAC,YAAW;AAET,YAAI+D,UAAU,GAAG;AACbjC,UAAAA,MAAM,EAAE;AACJkC,YAAAA,IAAI,EAAE;AACFN,cAAAA,IAAI,EAAE,IADJ;AAEFO,cAAAA,QAAQ,EAAE;AAFR;AADF,WADK;AAObnB,UAAAA,KAAK,EAAE;AACHoB,YAAAA,IAAI,EAAE,MADH;AAEHC,YAAAA,UAAU,EAAE,OAFT;AAGHC,YAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,KAAJ;AAHV,WAPM;AAYblC,UAAAA,IAAI,EAAE;AACFmC,YAAAA,SAAS,EAAE;AADT,WAZO;AAebZ,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAfK;AAkBbY,UAAAA,OAAO,EAAE,IAlBI;AAmBbC,UAAAA,WAAW,EAAE;AACTC,YAAAA,OAAO,EAAE;AADA;AAnBA,SAAjB;AAuBA,YAAIC,OAAO,GAAG;AACVC,UAAAA,KAAK,EAAE,KADG;AAEVvD,UAAAA,IAAI,EAAE,CACF,CAAC,aAAD,EAAgB,IAAhB,CADE,EAEF,CAAC,aAAD,EAAgB,IAAhB,CAFE,EAGF,CAAC,aAAD,EAAgB,IAAhB,CAHE,EAIF,CAAC,aAAD,EAAgB,IAAhB,CAJE,EAKF,CAAC,aAAD,EAAgB,IAAhB,CALE,EAMF,CAAC,aAAD,EAAgB,IAAhB,CANE;AAFI,SAAd;AAWAnB,QAAAA,CAAC,CAACiC,IAAF,CAAOjC,CAAC,CAAC,iBAAD,CAAR,EAA6B,CAACyE,OAAD,CAA7B,EAAwCV,UAAxC;AAEH,OAtCA,CAAD;AAwCH;;;6BACQ;AACL,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CAFJ,CADJ;AAeH;;;;EAtKoB7D,a;;AAyKzB,eAAeO,UAAf","sourcesContent":["// jQuery\nimport $ from \"jquery\";\n// Bootstrap Core JavaScript\nimport \"bootstrap/dist/js/bootstrap.js\";\n// Metis Menu Plugin JavaScript\nimport \"my-module/metisMenu/metisMenu.js\";\n// Flot Charts JavaScript\nimport \"my-module/flot/excanvas.js\";\nimport \"my-module/flot/jquery.flot.js\";\nimport \"my-module/flot/jquery.flot.pie.js\";\nimport \"my-module/flot/jquery.flot.resize.js\";\nimport \"my-module/flot/jquery.flot.time.js\";\nimport \"my-module/flot-tooltip/jquery.flot.tooltip.min.js\";\n// Custom Theme JavaScript\nimport \"my-module/sb-admin-2.js\";\n\nimport React, { PureComponent } from 'react';\nimport LineChart from './LineChart';\nimport PieChart from './PieChart';\nimport AxesLineChart from './AxesLineChart';\nimport MovingLineChart from './MovingLineChart';\nimport BarChart from './BarChart';\nimport Documentation from './Documentation';\n\nclass FlotCharts extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    componentDidMount() {\n        document.title = \"Flot Charts\";\n        document.getElementById(\"pageTitle\").innerHTML = \"Flot Charts\";\n        //Flot Moving Line Chart\n        $(function() {\n\n            var container = $(\"#flot-line-chart-moving\");\n\n            // Determine how many data points to keep based on the placeholder's initial size;\n            // this gives us a nice high-res plot while avoiding more than one point per pixel.\n\n            var maximum = container.outerWidth() / 2 || 300;\n\n            //\n\n            var data = [];\n\n            function getRandomData() {\n\n                if (data.length) {\n                    data = data.slice(1);\n                }\n\n                while (data.length < maximum) {\n                    var previous = data.length ? data[data.length - 1] : 50;\n                    var y = previous + Math.random() * 10 - 5;\n                    data.push(y < 0 ? 0 : y > 100 ? 100 : y);\n                }\n\n                // zip the generated y values with the x values\n\n                var res = [];\n                for (var i = 0; i < data.length; ++i) {\n                    res.push([i, data[i]])\n                }\n\n                return res;\n            }\n\n            //\n\n            let series = [{\n                data: getRandomData(),\n                lines: {\n                    fill: true\n                }\n            }];\n\n            //\n\n            var plot = $.plot(container, series, {\n                grid: {\n                    borderWidth: 1,\n                    minBorderMargin: 20,\n                    labelMargin: 10,\n                    backgroundColor: {\n                        colors: [\"#fff\", \"#e4f4f4\"]\n                    },\n                    margin: {\n                        top: 8,\n                        bottom: 20,\n                        left: 20\n                    },\n                    markings: function(axes) {\n                        var markings = [];\n                        var xaxis = axes.xaxis;\n                        for (var x = Math.floor(xaxis.min); x < xaxis.max; x += xaxis.tickSize * 2) {\n                            markings.push({\n                                xaxis: {\n                                    from: x,\n                                    to: x + xaxis.tickSize\n                                },\n                                color: \"rgba(232, 232, 255, 0.2)\"\n                            });\n                        }\n                        return markings;\n                    }\n                },\n                xaxis: {\n                    tickFormatter: function() {\n                        return \"\";\n                    }\n                },\n                yaxis: {\n                    min: 0,\n                    max: 110\n                },\n                legend: {\n                    show: true\n                }\n            });\n\n            // Update the random dataset at 25FPS for a smoothly-animating chart\n\n            setInterval(function updateRandom() {\n                series[0].data = getRandomData();\n                plot.setData(series);\n                plot.draw();\n            }, 40);\n\n        });\n\n        //Flot Bar Chart\n\n        $(function() {\n\n            var barOptions = {\n                series: {\n                    bars: {\n                        show: true,\n                        barWidth: 43200000\n                    }\n                },\n                xaxis: {\n                    mode: \"time\",\n                    timeformat: \"%m/%d\",\n                    minTickSize: [1, \"day\"]\n                },\n                grid: {\n                    hoverable: true\n                },\n                legend: {\n                    show: false\n                },\n                tooltip: true,\n                tooltipOpts: {\n                    content: \"x: %x, y: %y\"\n                }\n            };\n            var barData = {\n                label: \"bar\",\n                data: [\n                    [1354521600000, 1000],\n                    [1355040000000, 2000],\n                    [1355223600000, 3000],\n                    [1355306400000, 4000],\n                    [1355487300000, 5000],\n                    [1355571900000, 6000]\n                ]\n            };\n            $.plot($(\"#flot-bar-chart\"), [barData], barOptions);\n\n        });\n\n    }\n    render() { \n        return ( \n            <React.Fragment>\n                {/* <!-- /.row --> */}\n                <div className=\"row\">\n                    <LineChart />\n                    <PieChart />\n                    <AxesLineChart />\n                    <MovingLineChart />\n                    <BarChart />\n                    <Documentation />\n                </div>\n                {/* <!-- /.row --> */}\n\n            </React.Fragment>\n         );\n    }\n}\n \nexport default FlotCharts;"]},"metadata":{},"sourceType":"module"}