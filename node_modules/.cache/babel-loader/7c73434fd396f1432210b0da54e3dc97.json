{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/Lukman/sbadmin2reactjs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/Lukman/sbadmin2reactjs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/Lukman/sbadmin2reactjs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/Lukman/sbadmin2reactjs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/Lukman/sbadmin2reactjs/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/Lukman/sbadmin2reactjs/src/components/Charts/FlotCharts/BarChart.jsx\";\n// jQuery\nimport $ from \"jquery\";\nimport React, { PureComponent } from 'react';\n\nvar BarChart =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(BarChart, _PureComponent);\n\n  function BarChart(props) {\n    var _this;\n\n    _classCallCheck(this, BarChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BarChart).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(BarChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //Flot Bar Chart\n      $(function () {\n        var barOptions = {\n          series: {\n            bars: {\n              show: true,\n              barWidth: 43200000\n            }\n          },\n          xaxis: {\n            mode: \"time\",\n            timeformat: \"%m/%d\",\n            minTickSize: [1, \"day\"]\n          },\n          grid: {\n            hoverable: true\n          },\n          legend: {\n            show: false\n          },\n          tooltip: true,\n          tooltipOpts: {\n            content: \"x: %x, y: %y\"\n          }\n        };\n        var barData = {\n          label: \"bar\",\n          data: [[1354521600000, 1000], [1355040000000, 2000], [1355223600000, 3000], [1355306400000, 4000], [1355487300000, 5000], [1355571900000, 6000]]\n        };\n        $.plot($(\"#flot-bar-chart\"), [barData], barOptions);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"panel panel-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"panel-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Bar Chart Example\"), React.createElement(\"div\", {\n        className: \"panel-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flot-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flot-chart-content\",\n        id: \"flot-bar-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return BarChart;\n}(PureComponent);\n\nexport default BarChart;","map":{"version":3,"sources":["/opt/lampp/htdocs/Lukman/sbadmin2reactjs/src/components/Charts/FlotCharts/BarChart.jsx"],"names":["$","React","PureComponent","BarChart","props","state","barOptions","series","bars","show","barWidth","xaxis","mode","timeformat","minTickSize","grid","hoverable","legend","tooltip","tooltipOpts","content","barData","label","data","plot"],"mappings":";;;;;;AAAA;AACA,OAAOA,CAAP,MAAc,QAAd;AAEA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFe;AAGlB;;;;wCACmB;AAChB;AACAL,MAAAA,CAAC,CAAC,YAAW;AAET,YAAIM,UAAU,GAAG;AACbC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AACFC,cAAAA,IAAI,EAAE,IADJ;AAEFC,cAAAA,QAAQ,EAAE;AAFR;AADF,WADK;AAObC,UAAAA,KAAK,EAAE;AACHC,YAAAA,IAAI,EAAE,MADH;AAEHC,YAAAA,UAAU,EAAE,OAFT;AAGHC,YAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,KAAJ;AAHV,WAPM;AAYbC,UAAAA,IAAI,EAAE;AACFC,YAAAA,SAAS,EAAE;AADT,WAZO;AAebC,UAAAA,MAAM,EAAE;AACJR,YAAAA,IAAI,EAAE;AADF,WAfK;AAkBbS,UAAAA,OAAO,EAAE,IAlBI;AAmBbC,UAAAA,WAAW,EAAE;AACTC,YAAAA,OAAO,EAAE;AADA;AAnBA,SAAjB;AAuBA,YAAIC,OAAO,GAAG;AACVC,UAAAA,KAAK,EAAE,KADG;AAEVC,UAAAA,IAAI,EAAE,CACF,CAAC,aAAD,EAAgB,IAAhB,CADE,EAEF,CAAC,aAAD,EAAgB,IAAhB,CAFE,EAGF,CAAC,aAAD,EAAgB,IAAhB,CAHE,EAIF,CAAC,aAAD,EAAgB,IAAhB,CAJE,EAKF,CAAC,aAAD,EAAgB,IAAhB,CALE,EAMF,CAAC,aAAD,EAAgB,IAAhB,CANE;AAFI,SAAd;AAWAvB,QAAAA,CAAC,CAACwB,IAAF,CAAOxB,CAAC,CAAC,iBAAD,CAAR,EAA6B,CAACqB,OAAD,CAA7B,EAAwCf,UAAxC;AAEH,OAtCA,CAAD;AAuCH;;;6BACQ;AACL,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAKI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,QAAA,EAAE,EAAC,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CALJ,CADJ,CADJ,CADJ;AAoBH;;;;EApEkBJ,a;;AAuEvB,eAAeC,QAAf","sourcesContent":["// jQuery\nimport $ from \"jquery\";\n\nimport React, { PureComponent } from 'react';\n\nclass BarChart extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    componentDidMount() {\n        //Flot Bar Chart\n        $(function() {\n\n            var barOptions = {\n                series: {\n                    bars: {\n                        show: true,\n                        barWidth: 43200000\n                    }\n                },\n                xaxis: {\n                    mode: \"time\",\n                    timeformat: \"%m/%d\",\n                    minTickSize: [1, \"day\"]\n                },\n                grid: {\n                    hoverable: true\n                },\n                legend: {\n                    show: false\n                },\n                tooltip: true,\n                tooltipOpts: {\n                    content: \"x: %x, y: %y\"\n                }\n            };\n            var barData = {\n                label: \"bar\",\n                data: [\n                    [1354521600000, 1000],\n                    [1355040000000, 2000],\n                    [1355223600000, 3000],\n                    [1355306400000, 4000],\n                    [1355487300000, 5000],\n                    [1355571900000, 6000]\n                ]\n            };\n            $.plot($(\"#flot-bar-chart\"), [barData], barOptions);\n\n        });\n    }\n    render() { \n        return ( \n            <React.Fragment>\n                <div className=\"col-lg-6\">\n                    <div className=\"panel panel-default\">\n                        <div className=\"panel-heading\">\n                            Bar Chart Example\n                        </div>\n                        {/* <!-- /.panel-heading --> */}\n                        <div className=\"panel-body\">\n                            <div className=\"flot-chart\">\n                                <div className=\"flot-chart-content\" id=\"flot-bar-chart\"></div>\n                            </div>\n                        </div>\n                        {/* <!-- /.panel-body --> */}\n                    </div>\n                    {/* <!-- /.panel --> */}\n                </div>\n                {/* <!-- /.col-lg-6 --> */}\n            </React.Fragment>\n         );\n    }\n}\n \nexport default BarChart;"]},"metadata":{},"sourceType":"module"}