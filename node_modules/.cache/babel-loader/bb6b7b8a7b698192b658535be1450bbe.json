{"ast":null,"code":"/*\n * jquery.flot.tooltip\n * \n * description: easy-to-use tooltips for Flot charts\n * version: 0.8.7\n * authors: Krzysztof Urbas @krzysu [myviews.pl],Evan Steinkerchner @Roundaround\n * website: https://github.com/krzysu/flot.tooltip\n * \n * build on 2016-03-15\n * released under MIT License, 2012\n*/\n!function (a) {\n  var b = {\n    tooltip: {\n      show: !1,\n      cssClass: \"flotTip\",\n      content: \"%s | X: %x | Y: %y\",\n      xDateFormat: null,\n      yDateFormat: null,\n      monthNames: null,\n      dayNames: null,\n      shifts: {\n        x: 10,\n        y: 20\n      },\n      defaultTheme: !0,\n      snap: !0,\n      lines: !1,\n      clickTips: !1,\n      onHover: function onHover(a, b) {},\n      $compat: !1\n    }\n  };\n  b.tooltipOpts = b.tooltip;\n\n  var c = function c(a) {\n    this.tipPosition = {\n      x: 0,\n      y: 0\n    }, this.init(a);\n  };\n\n  c.prototype.init = function (b) {\n    function c(a) {\n      var c = {};\n      c.x = a.pageX, c.y = a.pageY, b.setTooltipPosition(c);\n    }\n\n    function d(c, d, g) {\n      f.clickmode ? (a(b.getPlaceholder()).bind(\"plothover\", e), b.hideTooltip(), f.clickmode = !1) : (e(c, d, g), f.getDomElement().is(\":visible\") && (a(b.getPlaceholder()).unbind(\"plothover\", e), f.clickmode = !0));\n    }\n\n    function e(c, d, e) {\n      var g = function g(a, b, c, d) {\n        return Math.sqrt((c - a) * (c - a) + (d - b) * (d - b));\n      },\n          h = function h(a, b, c, d, e, f, _h) {\n        if (!_h || (_h = function (a, b, c, d, e, f) {\n          if (\"undefined\" != typeof c) return {\n            x: c,\n            y: b\n          };\n          if (\"undefined\" != typeof d) return {\n            x: a,\n            y: d\n          };\n          var g,\n              h = -1 / ((f - d) / (e - c));\n          return {\n            x: g = (e * (a * h - b + d) + c * (a * -h + b - f)) / (h * (e - c) + d - f),\n            y: h * g - h * a + b\n          };\n        }(a, b, c, d, e, f), _h.x >= Math.min(c, e) && _h.x <= Math.max(c, e) && _h.y >= Math.min(d, f) && _h.y <= Math.max(d, f))) {\n          var i = d - f,\n              j = e - c,\n              k = c * f - d * e;\n          return Math.abs(i * a + j * b + k) / Math.sqrt(i * i + j * j);\n        }\n\n        var l = g(a, b, c, d),\n            m = g(a, b, e, f);\n        return l > m ? m : l;\n      };\n\n      if (e) b.showTooltip(e, f.tooltipOptions.snap ? e : d);else if (f.plotOptions.series.lines.show && f.tooltipOptions.lines === !0) {\n        var i = f.plotOptions.grid.mouseActiveRadius,\n            j = {\n          distance: i + 1\n        },\n            k = d;\n        a.each(b.getData(), function (a, c) {\n          for (var e = 0, i = -1, l = 1; l < c.data.length; l++) {\n            c.data[l - 1][0] <= d.x && c.data[l][0] >= d.x && (e = l - 1, i = l);\n          }\n\n          if (-1 === i) return void b.hideTooltip();\n          var m = {\n            x: c.data[e][0],\n            y: c.data[e][1]\n          },\n              n = {\n            x: c.data[i][0],\n            y: c.data[i][1]\n          },\n              o = h(c.xaxis.p2c(d.x), c.yaxis.p2c(d.y), c.xaxis.p2c(m.x), c.yaxis.p2c(m.y), c.xaxis.p2c(n.x), c.yaxis.p2c(n.y), !1);\n\n          if (o < j.distance) {\n            var p = g(m.x, m.y, d.x, d.y) < g(d.x, d.y, n.x, n.y) ? e : i,\n                q = (c.datapoints.pointsize, [d.x, m.y + (n.y - m.y) * ((d.x - m.x) / (n.x - m.x))]),\n                r = {\n              datapoint: q,\n              dataIndex: p,\n              series: c,\n              seriesIndex: a\n            };\n            j = {\n              distance: o,\n              item: r\n            }, f.tooltipOptions.snap && (k = {\n              pageX: c.xaxis.p2c(q[0]),\n              pageY: c.yaxis.p2c(q[1])\n            });\n          }\n        }), j.distance < i + 1 ? b.showTooltip(j.item, k) : b.hideTooltip();\n      } else b.hideTooltip();\n    }\n\n    var f = this,\n        g = a.plot.plugins.length;\n    if (this.plotPlugins = [], g) for (var h = 0; g > h; h++) {\n      this.plotPlugins.push(a.plot.plugins[h].name);\n    }\n    b.hooks.bindEvents.push(function (b, g) {\n      if (f.plotOptions = b.getOptions(), \"boolean\" == typeof f.plotOptions.tooltip && (f.plotOptions.tooltipOpts.show = f.plotOptions.tooltip, f.plotOptions.tooltip = f.plotOptions.tooltipOpts, delete f.plotOptions.tooltipOpts), f.plotOptions.tooltip.show !== !1 && \"undefined\" != typeof f.plotOptions.tooltip.show) {\n        f.tooltipOptions = f.plotOptions.tooltip, f.tooltipOptions.$compat ? (f.wfunc = \"width\", f.hfunc = \"height\") : (f.wfunc = \"innerWidth\", f.hfunc = \"innerHeight\");\n        f.getDomElement();\n        a(b.getPlaceholder()).bind(\"plothover\", e), f.tooltipOptions.clickTips && a(b.getPlaceholder()).bind(\"plotclick\", d), f.clickmode = !1, a(g).bind(\"mousemove\", c);\n      }\n    }), b.hooks.shutdown.push(function (b, f) {\n      a(b.getPlaceholder()).unbind(\"plothover\", e), a(b.getPlaceholder()).unbind(\"plotclick\", d), b.removeTooltip(), a(f).unbind(\"mousemove\", c);\n    }), b.setTooltipPosition = function (b) {\n      var c = f.getDomElement(),\n          d = c.outerWidth() + f.tooltipOptions.shifts.x,\n          e = c.outerHeight() + f.tooltipOptions.shifts.y;\n      b.x - a(window).scrollLeft() > a(window)[f.wfunc]() - d && (b.x -= d), b.y - a(window).scrollTop() > a(window)[f.hfunc]() - e && (b.y -= e), isNaN(b.x) ? f.tipPosition.x = f.tipPosition.xPrev : (f.tipPosition.x = b.x, f.tipPosition.xPrev = b.x), isNaN(b.y) ? f.tipPosition.y = f.tipPosition.yPrev : (f.tipPosition.y = b.y, f.tipPosition.yPrev = b.y);\n    }, b.showTooltip = function (a, c, d) {\n      var e = f.getDomElement(),\n          g = f.stringFormat(f.tooltipOptions.content, a);\n      \"\" !== g && (e.html(g), b.setTooltipPosition({\n        x: c.pageX,\n        y: c.pageY\n      }), e.css({\n        left: f.tipPosition.x + f.tooltipOptions.shifts.x,\n        top: f.tipPosition.y + f.tooltipOptions.shifts.y\n      }).show(), \"function\" == typeof f.tooltipOptions.onHover && f.tooltipOptions.onHover(a, e));\n    }, b.hideTooltip = function () {\n      f.getDomElement().hide().html(\"\");\n    }, b.removeTooltip = function () {\n      f.getDomElement().remove();\n    };\n  }, c.prototype.getDomElement = function () {\n    var b = a(\"<div>\");\n    return this.tooltipOptions && this.tooltipOptions.cssClass && (b = a(\".\" + this.tooltipOptions.cssClass), 0 === b.length && (b = a(\"<div />\").addClass(this.tooltipOptions.cssClass), b.appendTo(\"body\").hide().css({\n      position: \"absolute\"\n    }), this.tooltipOptions.defaultTheme && b.css({\n      background: \"#fff\",\n      \"z-index\": \"1040\",\n      padding: \"0.4em 0.6em\",\n      \"border-radius\": \"0.5em\",\n      \"font-size\": \"0.8em\",\n      border: \"1px solid #111\",\n      display: \"none\",\n      \"white-space\": \"nowrap\"\n    }))), b;\n  }, c.prototype.stringFormat = function (a, b) {\n    var c,\n        d,\n        e,\n        f,\n        g,\n        h = /%p\\.{0,1}(\\d{0,})/,\n        i = /%s/,\n        j = /%c/,\n        k = /%lx/,\n        l = /%ly/,\n        m = /%x\\.{0,1}(\\d{0,})/,\n        n = /%y\\.{0,1}(\\d{0,})/,\n        o = \"%x\",\n        p = \"%y\",\n        q = \"%ct\",\n        r = \"%n\";\n    if (\"undefined\" != typeof b.series.threshold ? (c = b.datapoint[0], d = b.datapoint[1], e = b.datapoint[2]) : \"undefined\" != typeof b.series.curvedLines ? (c = b.datapoint[0], d = b.datapoint[1]) : \"undefined\" != typeof b.series.lines && b.series.lines.steps ? (c = b.series.datapoints.points[2 * b.dataIndex], d = b.series.datapoints.points[2 * b.dataIndex + 1], e = \"\") : (c = b.series.data[b.dataIndex][0], d = b.series.data[b.dataIndex][1], e = b.series.data[b.dataIndex][2]), null === b.series.label && b.series.originSeries && (b.series.label = b.series.originSeries.label), \"function\" == typeof a && (a = a(b.series.label, c, d, b)), \"boolean\" == typeof a && !a) return \"\";\n\n    if (e && (a = a.replace(q, e)), \"undefined\" != typeof b.series.percent ? f = b.series.percent : \"undefined\" != typeof b.series.percents && (f = b.series.percents[b.dataIndex]), \"number\" == typeof f && (a = this.adjustValPrecision(h, a, f)), b.series.hasOwnProperty(\"pie\") && (g = b.series.data[0][1]), \"number\" == typeof g && (a = a.replace(r, g)), a = \"undefined\" != typeof b.series.label ? a.replace(i, b.series.label) : a.replace(i, \"\"), a = \"undefined\" != typeof b.series.color ? a.replace(j, b.series.color) : a.replace(j, \"\"), a = this.hasAxisLabel(\"xaxis\", b) ? a.replace(k, b.series.xaxis.options.axisLabel) : a.replace(k, \"\"), a = this.hasAxisLabel(\"yaxis\", b) ? a.replace(l, b.series.yaxis.options.axisLabel) : a.replace(l, \"\"), this.isTimeMode(\"xaxis\", b) && this.isXDateFormat(b) && (a = a.replace(m, this.timestampToDate(c, this.tooltipOptions.xDateFormat, b.series.xaxis.options))), this.isTimeMode(\"yaxis\", b) && this.isYDateFormat(b) && (a = a.replace(n, this.timestampToDate(d, this.tooltipOptions.yDateFormat, b.series.yaxis.options))), \"number\" == typeof c && (a = this.adjustValPrecision(m, a, c)), \"number\" == typeof d && (a = this.adjustValPrecision(n, a, d)), \"undefined\" != typeof b.series.xaxis.ticks) {\n      var s;\n      s = this.hasRotatedXAxisTicks(b) ? \"rotatedTicks\" : \"ticks\";\n      var t = b.dataIndex + b.seriesIndex;\n\n      for (var u in b.series.xaxis[s]) {\n        if (b.series.xaxis[s].hasOwnProperty(t) && !this.isTimeMode(\"xaxis\", b)) {\n          var v = this.isCategoriesMode(\"xaxis\", b) ? b.series.xaxis[s][t].label : b.series.xaxis[s][t].v;\n          v === c && (a = a.replace(m, b.series.xaxis[s][t].label.replace(/\\$/g, \"$$$$\")));\n        }\n      }\n    }\n\n    if (\"undefined\" != typeof b.series.yaxis.ticks) for (var w in b.series.yaxis.ticks) {\n      if (b.series.yaxis.ticks.hasOwnProperty(w)) {\n        var x = this.isCategoriesMode(\"yaxis\", b) ? b.series.yaxis.ticks[w].label : b.series.yaxis.ticks[w].v;\n        x === d && (a = a.replace(n, b.series.yaxis.ticks[w].label.replace(/\\$/g, \"$$$$\")));\n      }\n    }\n    return \"undefined\" != typeof b.series.xaxis.tickFormatter && (a = a.replace(o, b.series.xaxis.tickFormatter(c, b.series.xaxis).replace(/\\$/g, \"$$\"))), \"undefined\" != typeof b.series.yaxis.tickFormatter && (a = a.replace(p, b.series.yaxis.tickFormatter(d, b.series.yaxis).replace(/\\$/g, \"$$\"))), a;\n  }, c.prototype.isTimeMode = function (a, b) {\n    return \"undefined\" != typeof b.series[a].options.mode && \"time\" === b.series[a].options.mode;\n  }, c.prototype.isXDateFormat = function (a) {\n    return \"undefined\" != typeof this.tooltipOptions.xDateFormat && null !== this.tooltipOptions.xDateFormat;\n  }, c.prototype.isYDateFormat = function (a) {\n    return \"undefined\" != typeof this.tooltipOptions.yDateFormat && null !== this.tooltipOptions.yDateFormat;\n  }, c.prototype.isCategoriesMode = function (a, b) {\n    return \"undefined\" != typeof b.series[a].options.mode && \"categories\" === b.series[a].options.mode;\n  }, c.prototype.timestampToDate = function (b, c, d) {\n    var e = a.plot.dateGenerator(b, d);\n    return a.plot.formatDate(e, c, this.tooltipOptions.monthNames, this.tooltipOptions.dayNames);\n  }, c.prototype.adjustValPrecision = function (a, b, c) {\n    var d,\n        e = b.match(a);\n    return null !== e && \"\" !== RegExp.$1 && (d = RegExp.$1, c = c.toFixed(d), b = b.replace(a, c)), b;\n  }, c.prototype.hasAxisLabel = function (b, c) {\n    return -1 !== a.inArray(\"axisLabels\", this.plotPlugins) && \"undefined\" != typeof c.series[b].options.axisLabel && c.series[b].options.axisLabel.length > 0;\n  }, c.prototype.hasRotatedXAxisTicks = function (b) {\n    return -1 !== a.inArray(\"tickRotor\", this.plotPlugins) && \"undefined\" != typeof b.series.xaxis.rotatedTicks;\n  };\n\n  var d = function d(a) {\n    new c(a);\n  };\n\n  a.plot.plugins.push({\n    init: d,\n    options: b,\n    name: \"tooltip\",\n    version: \"0.8.5\"\n  });\n}(jQuery);","map":null,"metadata":{},"sourceType":"script"}