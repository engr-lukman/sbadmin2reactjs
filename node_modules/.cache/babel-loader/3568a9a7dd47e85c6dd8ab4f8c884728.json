{"ast":null,"code":"Array.prototype.fill = function () {\n  var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (i) {\n    return true;\n  };\n\n  for (var i = 0; i < this.length; i++) {\n    this[i] = callback(i);\n  }\n\n  return this;\n};\n\nObject.prototype.fillDefaults = function (defaults) {\n  var _this = this;\n\n  Object.keys(defaults).forEach(function (key) {\n    if (!(key in _this)) {\n      _this[key] = defaults[key];\n    } else if (typeof defaults[key] == \"object\" && defaults[key] != null) {\n      _this[key] = _this[key].fillDefaults(defaults[key]);\n    }\n  });\n  return this;\n};\n\nArray.prototype.indexOfKey = function (value, key) {\n  var start = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  for (var i = start; i < this.length; i++) {\n    if (this[i][key] === value) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nArray.prototype.objectFromKey = function (value, key) {\n  var start = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var index = this.indexOfKey(value, key, start);\n  var item = this[index]; //item.__index = index;\n\n  return item;\n};\n/*\nString.prototype.repeat = function(count) {\n  var str = \"\";\n  for (var i = 0; i < count; i++) {\n    str += this;\n  }\n  return this;\n};*/","map":null,"metadata":{},"sourceType":"script"}